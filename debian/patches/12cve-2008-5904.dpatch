#! /bin/sh /usr/share/dpatch/dpatch-run
## 12cve-2008-5904.dpatch by  <bernat@neo.luffy.cx>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Fix CVE-2008-5904
## DP: The rdp_rdp_process_color_pointer_pdu function in rdp/rdp_rdp.c in
## DP: xrdp 0.4.1 and earlier allows remote RDP servers to have an unknown
## DP: impact via input data that sets crafted values for certain length
## DP: variables, leading to a buffer overflow.

@DPATCH@

--- xrdp/rdp/rdp_rdp.c	2008/05/31 02:13:33	1.9.2.1
+++ xrdp/rdp/rdp_rdp.c	2009/01/23 06:57:30	1.9.2.2
@@ -395,7 +395,7 @@
 
 /******************************************************************************/
 /* Process a color pointer PDU */
-static void APP_CC
+static int APP_CC
 rdp_rdp_process_color_pointer_pdu(struct rdp_rdp* self, struct stream* s)
 {
   int cache_idx;
@@ -404,6 +404,10 @@
   struct rdp_cursor* cursor;
 
   in_uint16_le(s, cache_idx);
+  if (cache_idx >= sizeof(self->cursors) / sizeof(cursor))
+  {
+    return 1;
+  }
   cursor = self->cursors + cache_idx;
   in_uint16_le(s, cursor->x);
   in_uint16_le(s, cursor->y);
@@ -411,29 +415,39 @@
   in_uint16_le(s, cursor->height);
   in_uint16_le(s, mlen); /* mask length */
   in_uint16_le(s, dlen); /* data length */
+  if ((mlen > sizeof(cursor->mask)) || (dlen > sizeof(cursor->data)))
+  {
+    return 1;
+  }
   in_uint8a(s, cursor->data, dlen);
   in_uint8a(s, cursor->mask, mlen);
   self->mod->server_set_cursor(self->mod, cursor->x, cursor->y,
                                cursor->data, cursor->mask);
+  return 0;
 }
 
 /******************************************************************************/
 /* Process a cached pointer PDU */
-static void APP_CC
+static int APP_CC
 rdp_rdp_process_cached_pointer_pdu(struct rdp_rdp* self, struct stream* s)
 {
   int cache_idx;
   struct rdp_cursor* cursor;
 
   in_uint16_le(s, cache_idx);
+  if (cache_idx >= sizeof(self->cursors) / sizeof(cursor))
+  {
+    return 1;
+  }
   cursor = self->cursors + cache_idx;
   self->mod->server_set_cursor(self->mod, cursor->x, cursor->y,
                                cursor->data, cursor->mask);
+  return 0;
 }
 
 /******************************************************************************/
 /* Process a system pointer PDU */
-static void APP_CC
+static int APP_CC
 rdp_rdp_process_system_pointer_pdu(struct rdp_rdp* self, struct stream* s)
 {
   int system_pointer_type;
@@ -452,17 +466,20 @@
     default:
       break;
   }
+  return 0;
 }
 
 /******************************************************************************/
 /* Process a pointer PDU */
-static void APP_CC
+static int APP_CC
 rdp_rdp_process_pointer_pdu(struct rdp_rdp* self, struct stream* s)
 {
   int message_type;
   int x;
   int y;
+  int rv;
 
+  rv = 0;
   in_uint16_le(s, message_type);
   in_uint8s(s, 2); /* pad */
   switch (message_type)
@@ -472,17 +489,18 @@
       in_uint16_le(s, y);
       break;
     case RDP_POINTER_COLOR:
-      rdp_rdp_process_color_pointer_pdu(self, s);
+      rv = rdp_rdp_process_color_pointer_pdu(self, s);
       break;
     case RDP_POINTER_CACHED:
-      rdp_rdp_process_cached_pointer_pdu(self, s);
+      rv = rdp_rdp_process_cached_pointer_pdu(self, s);
       break;
     case RDP_POINTER_SYSTEM:
-      rdp_rdp_process_system_pointer_pdu(self, s);
+      rv = rdp_rdp_process_system_pointer_pdu(self, s);
       break;
     default:
       break;
   }
+  return rv;
 }
 
 /******************************************************************************/
@@ -606,7 +624,7 @@
 
 /******************************************************************************/
 /* Process an update PDU */
-static void APP_CC
+static int APP_CC
 rdp_rdp_process_update_pdu(struct rdp_rdp* self, struct stream* s)
 {
   int update_type;
@@ -634,6 +652,7 @@
       break;
   }
   self->mod->server_end_update(self->mod);
+  return 0;
 }
 
 
@@ -843,7 +862,9 @@
   int ctype;
   int clen;
   int len;
+  int rv;
 
+  rv = 0;
   in_uint8s(s, 6); /* shareid, pad, streamid */
   in_uint16_le(s, len);
   in_uint8(s, data_pdu_type);
@@ -853,26 +874,26 @@
   switch (data_pdu_type)
   {
     case RDP_DATA_PDU_UPDATE:
-      rdp_rdp_process_update_pdu(self, s);
+      rv = rdp_rdp_process_update_pdu(self, s);
       break;
     case RDP_DATA_PDU_CONTROL:
       break;
     case RDP_DATA_PDU_SYNCHRONISE:
       break;
     case RDP_DATA_PDU_POINTER:
-      rdp_rdp_process_pointer_pdu(self, s);
+      rv = rdp_rdp_process_pointer_pdu(self, s);
       break;
     case RDP_DATA_PDU_BELL:
       break;
     case RDP_DATA_PDU_LOGON:
       break;
     case RDP_DATA_PDU_DISCONNECT:
-      rdp_rdp_process_disconnect_pdu(self, s);
+      rv = rdp_rdp_process_disconnect_pdu(self, s);
       break;
     default:
       break;
   }
-  return 0;
+  return rv;
 }
 
 /******************************************************************************/
