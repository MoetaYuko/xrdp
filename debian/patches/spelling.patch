Description: Fix spelling issue
Author: Andreas Tille <tille@debian.org>
Last-Updated: Tue, 08 Mar 2016 11:15:04 +0100

--- a/libxrdp/xrdp_mcs.c
+++ b/libxrdp/xrdp_mcs.c
@@ -180,7 +180,7 @@ xrdp_mcs_recv(struct xrdp_mcs *self, str
         }
         else
         {
-            log_message(LOG_LEVEL_DEBUG,"Recieved an unhandled appid:%d",appid);
+            log_message(LOG_LEVEL_DEBUG,"Received an unhandled appid:%d",appid);
         }
 
         break;
--- a/rdp/rdp_orders.c
+++ b/rdp/rdp_orders.c
@@ -1435,7 +1435,7 @@ rdp_orders_process_orders(struct rdp_ord
 }
 
 /*****************************************************************************/
-/* returns pointer, it might return bmpdata if the data dosen't need to
+/* returns pointer, it might return bmpdata if the data doesn't need to
    be converted, else it mallocs it.  The calling function must free
    it if needed */
 char *APP_CC
--- a/xorg/X11R7.6/rdp/rdpPolyFillRect.c
+++ b/xorg/X11R7.6/rdp/rdpPolyFillRect.c
@@ -188,7 +188,7 @@ rdpPolyFillRect(DrawablePtr pDrawable, G
                      pGC->alu == GXnoop ||
                      pGC->alu == GXand ||
                      pGC->alu == GXcopy /*||
-                     pGC->alu == GXxor*/)) /* todo, why dosen't xor work? */
+                     pGC->alu == GXxor*/)) /* todo, why doesn't xor work? */
             {
                 draw_item_add_fill_region(pDirtyPriv, fill_reg, pGC->fgPixel,
                                           pGC->alu);
@@ -210,7 +210,7 @@ rdpPolyFillRect(DrawablePtr pDrawable, G
                      pGC->alu == GXnoop ||
                      pGC->alu == GXand ||
                      pGC->alu == GXcopy /*||
-                     pGC->alu == GXxor*/)) /* todo, why dosen't xor work? */
+                     pGC->alu == GXxor*/)) /* todo, why doesn't xor work? */
             {
                 rdpup_set_fgcolor(pGC->fgPixel);
                 rdpup_set_opcode(pGC->alu);
@@ -253,7 +253,7 @@ rdpPolyFillRect(DrawablePtr pDrawable, G
                          pGC->alu == GXnoop ||
                          pGC->alu == GXand ||
                          pGC->alu == GXcopy /*||
-                         pGC->alu == GXxor*/)) /* todo, why dosen't xor work? */
+                         pGC->alu == GXxor*/)) /* todo, why doesn't xor work? */
                 {
                     LLOGLN(10, ("rdpPolyFillRect: 3"));
                     draw_item_add_fill_region(pDirtyPriv, &clip_reg,
@@ -280,7 +280,7 @@ rdpPolyFillRect(DrawablePtr pDrawable, G
                          pGC->alu == GXnoop ||
                          pGC->alu == GXand ||
                          pGC->alu == GXcopy /*||
-                         pGC->alu == GXxor*/)) /* todo, why dosen't xor work? */
+                         pGC->alu == GXxor*/)) /* todo, why doesn't xor work? */
                 {
                     rdpup_set_fgcolor(pGC->fgPixel);
                     rdpup_set_opcode(pGC->alu);
--- a/xorg/X11R7.6/rdp/rdpmain.c
+++ b/xorg/X11R7.6/rdp/rdpmain.c
@@ -590,7 +590,7 @@ rdpScreenInit(int index, ScreenPtr pScre
 /******************************************************************************/
 /* this is the first function called, it can be called many times
    returns the number or parameters processed
-   if it dosen't apply to the rdp part, return 0 */
+   if it doesn't apply to the rdp part, return 0 */
 int
 ddxProcessArgument(int argc, char **argv, int i)
 {
--- a/xrdp/lang.c
+++ b/xrdp/lang.c
@@ -252,7 +252,7 @@ get_keymaps(int keylayout, struct xrdp_k
             if (g_memcmp(lkeymap, keymap, sizeof(struct xrdp_keymap)) != 0)
             {
                 log_message(LOG_LEVEL_WARNING,
-                            "local keymap file for 0x%4.4x found and dosen't match "
+                            "local keymap file for 0x%4.4x found and doesn't match "
                             "built in keymap, using local keymap file", keylayout);
             }
 
